self: { config, lib, pkgs, ... }:

let
  cfg = config.user-login-session;
  defaultPackage = self.packages.${pkgs.system}.default;
  toEnv = vars: lib.strings.concatStringsSep "\n"
    (lib.attrsets.mapAttrsToList (name: value: "export ${name}=${value}") vars);

in {
  options.user-login-session = {
    enable = lib.mkEnableOption "user-managed login session";

    compositor = lib.mkOption {
      type = lib.types.path;
      description = ''
        Path to a wayland compositor to run.
      '';
    };

    extraEnvVariables = lib.mkOption {
      type = lib.types.attrsOf lib.types.str;
      description = ''
        Extra session variables to expose to the compositor.
      '';
      example = lib.literalExpression ''
        {
          "MOZ_ENABLE_WAYLAND" = "1";
        }
      '';
    };
  };

  config = lib.mkIf cfg.enable {
    xdg.configFile."user-login-session/session" = {
      text = ''
        #!${pkgs.bash}/bin/bash
        # DO NOT EDIT
        # Generated by Home Manager

        # Exported extra env vars
        ${toEnv cfg.extraEnvVariables}

        # Call the specified compositor
        ${cfg.compositor}
      '';

      executable = true;
    };
  };
}
